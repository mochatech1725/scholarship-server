export const aiPrompts = {
  scholarshipAnalysis: {
    system: "You are a helpful scholarship search assistant. You must respond with ONLY valid JSON array format, no markdown, no code blocks, no additional text.",
    user: `You are an expert scholarship search assistant. Analyze the following scholarship data and return the most relevant scholarships based on the user's search criteria.\n\nUser Search Criteria:\n{searchCriteria}\n\nAvailable Scholarships:\n{scrapedData}\n\nInstructions:\n1. Analyze each scholarship for relevance to the user's search criteria\n2. Consider semantic similarity, field of study, and eligibility criteria\n3. Prioritize scholarships that match the specific filter criteria (education level, subject areas, gender, ethnicity, etc.)\n4. Rank scholarships by relevance score (0.0 to 1.0)\n5. Return only the top {maxResults} most relevant scholarships\n\nCRITICAL: Return ONLY a JSON array, no markdown formatting, no code blocks, no additional text.\n\nReturn format (JSON array only):\n[\n  {\n    \"title\": \"Scholarship Title\",\n    \"description\": \"Brief description\",\n    \"amount\": \"Amount range if available\",\n    \"deadline\": \"Deadline if available\",\n    \"eligibility\": \"Eligibility criteria if available\",\n    \"source\": \"Source website\",\n    \"url\": \"URL if available\",\n    \"targetType\": \"Merit, Need, or Both\",\n    \"relevanceScore\": 0.95\n  }\n]\n\nRank by relevance to the search criteria. Return only valid JSON array.`
  },
  htmlParsing: {
    system: "You are an expert web scraping assistant that can intelligently extract scholarship information from any HTML structure. You must respond with ONLY valid JSON array format, no markdown, no code blocks, no additional text.",
    user: `You are an expert at extracting scholarship information from HTML content. Analyze the provided HTML and extract all scholarship opportunities you can find.\n\nWebsite: {websiteName}\nURL: {websiteUrl}\n\nHTML Content:\n{htmlContent}\n\nInstructions:\n1. Look for any scholarship-related content in the HTML\n2. Identify scholarship titles, descriptions, amounts, deadlines, eligibility criteria, etc.\n3. Be flexible with field names - look for variations like:\n   - Deadline: due date, application deadline, closing date, etc.\n   - Amount: award amount, scholarship value, prize money, etc.\n   - Organization: company, sponsor, provider, institution, etc.\n   - Ethnicity: race, background, heritage, etc.\n   - GPA: grade point average, academic standing, etc.\n4. Extract any relevant information even if field names don't match exactly\n5. Use context clues to identify scholarship-related content\n6. Look for patterns in the HTML structure that indicate scholarship listings\n\nCRITICAL: Return ONLY a JSON array, no markdown formatting, no code blocks, no additional text.\n\nReturn format (JSON array only):\n[\n  {\n    \"title\": \"Scholarship Title\",\n    \"description\": \"Description if found\",\n    \"amount\": \"Amount if found\",\n    \"deadline\": \"Deadline if found\",\n    \"organization\": \"Organization/Company if found\",\n    \"eligibility\": \"Eligibility criteria if found\",\n    \"url\": \"Direct URL if found\",\n    \"targetType\": \"Merit/Need/Both if discernible\",\n    \"educationLevel\": \"Education level if found\",\n    \"subjectAreas\": \"Subject areas if found\",\n    \"gender\": \"Gender requirement if found\",\n    \"ethnicity\": \"Ethnicity requirement if found\",\n    \"gpa\": \"GPA requirement if found\",\n    \"essayRequired\": \"Essay requirement if found\",\n    \"recommendationRequired\": \"Recommendation requirement if found\"\n  }\n]\n\nIf no scholarships are found, return: []`
  },
  healthCheck: {
    system: "You are a helpful AI assistant. Respond briefly.",
    user: "Hello"
  }
}; 